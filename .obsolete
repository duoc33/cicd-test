stages:
  - build

variables:
  UNITY_PATH: "/opt/unity/Editor/Unity"  # 假设你已经为 CI/CD 环境安装了 Unity，路径应该是相对于 Runner 环境的
  PROJECT_PATH: "$CI_PROJECT_DIR"  # GitLab CI/CD 会自动定义，指向项目的根目录
  BUILD_PATH: "$CI_PROJECT_DIR/build"  # 构建输出路径，相对工作目录
  LOG_PATH: "$CI_PROJECT_DIR/build/BuildLog.txt"  # 构建日志路径，放在工作目录中的 build 文件夹里

# WebGL 构建任务
build_webgl:
  stage: build
  script:
    - echo "UNITY_PATH is: $UNITY_PATH"
    - echo "PROJECT_PATH is: $PROJECT_PATH"
    - echo "BUILD_PATH is: $BUILD_PATH"
    - echo "LOG_PATH is: $LOG_PATH"
    - mkdir -p $BUILD_PATH  # 创建构建目录
    - "$UNITY_PATH" -batchmode -quit -projectPath "$PROJECT_PATH" -executeMethod WebGLTool.WebGLBuildScript.BuildProject -logFile "$LOG_PATH"
    - ls -R $BUILD_PATH  # 列出构建路径的内容，确认是否有文件
    - tail -n 100 $LOG_PATH  # 查看最后100行构建日志，检查是否有错误
  artifacts:
    paths:
      - $BUILD_PATH  # 上传构建产物
  only:
    - main  # 只在 main 分支上触发构建